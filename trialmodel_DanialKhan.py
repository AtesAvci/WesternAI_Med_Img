# -*- coding: utf-8 -*-
"""Copy of ML_potential_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mnC-WOtScKbR4to0HX-Z5EuR6f5ps0DZ
"""

import os
from os.path import join
from IPython.display import Image, display
import numpy as np
import tempfile
from sklearn.model_selection import train_test_split
from tensorflow import keras
from tensorflow.keras.preprocessing.image import load_img, ImageDataGenerator
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten, Conv2D, Conv1D,MaxPooling2D,Dropout
###Danial
###Oleksii
## Ates
###Leo
### we got this !

from google.colab import drive
drive.mount('/content/drive')

train_path = '/content/drive/My Drive/xray data/chest_xray/train'
val_path = '/content/drive/My Drive/xray data/chest_xray/val'
test_path = '/content/drive/My Drive/xray data/chest_xray/test'
train_batch = ImageDataGenerator(rescale=1/255).flow_from_directory(train_path,target_size = (64,64),classes = ['NORMAL','PNEUMONIA'],batch_size=163)
test_batch = ImageDataGenerator(rescale=1/255).flow_from_directory(test_path,target_size = (64,64),classes = ['NORMAL','PNEUMONIA'],batch_size=26)
val_batch = ImageDataGenerator(rescale=1/255).flow_from_directory(val_path,target_size = (64,64),classes = ['NORMAL','PNEUMONIA'],batch_size=10)

my_net = Sequential()
my_net.add(Conv2D(32, (3, 3), activation="relu", input_shape=(64, 64, 3)))
my_net.add(MaxPooling2D(pool_size = (2, 2)))
my_net.add(Conv2D(32, (3, 3), activation="relu"))
my_net.add(MaxPooling2D(pool_size = (2, 2)))
my_net.add(Flatten())
my_net.add(Dropout(0.2, input_shape=(60,)))
my_net.add(Dense(128, activation = 'relu'))

my_net.add(Dense(2,activation = 'softmax'))
my_net.summary()

my_net.compile(loss = 'binary_crossentropy', optimizer = 'adam',metrics=['accuracy'])
My_net.fit(train_batch,steps_per_epoch=32,epochs = 4,validation_data=val_batch,validation_steps=2)

results = my_net.evaluate(test_batch)
print("test loss, test acc:", results)